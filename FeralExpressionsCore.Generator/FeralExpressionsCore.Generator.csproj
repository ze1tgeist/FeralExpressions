<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <StartupObject>FeralExpressionsCore.Generator.Program</StartupObject>
	<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	<IncludeBuiltProjectOutputGroup>true</IncludeBuiltProjectOutputGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	<IsTool>true</IsTool>
    <Version>3.0.2</Version>
    <Authors>ruben morton</Authors>
    <Company />
    <Product />
    <Description>This project supplies compile time support for FeralExpressionsCore.
For every.cs file which contains a partial class with one or more expression bodied method, it creates an equivalent of that
method which has the same logic, but is a static Expression property.
For example,
public static string Test(string arg1) =&gt; ""abc"" + arg1;
would produce
public static Expression&amp;lt;Func&amp;lt;string,string&amp;gt;&amp;gt; Test_Expression =&gt; (string arg1) =&gt; ""abc"" + arg1;</Description>
    <Copyright>Copyright 2018</Copyright>
    <PackageProjectUrl>https://github.com/ze1tgeist/FeralExpressions</PackageProjectUrl>
    <PackageReleaseNotes>- Fixed a build order bug</PackageReleaseNotes>
    <PackageTags>Linq EntityFramework Expressions Inline</PackageTags>
  </PropertyGroup>

  <ItemGroup>
	  <None Include="FeralExpressionsCore.Generator.targets">
		  <Pack>true</Pack>
		  <PackagePath>build</PackagePath>
	  </None>
  </ItemGroup>
  <ItemGroup>
	  <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="2.8.2">
		  <PrivateAssets>all</PrivateAssets>
	  </PackageReference>
  </ItemGroup>

	<Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">

		<ItemGroup>
			<_PackageFiles Include="bin\$(Configuration)\netcoreapp2.0\*.dll" Exclude="bin\$(Configuration)\netcoreapp2.0\FeralExpressionsCore*.dll">
				<PackagePath>tools</PackagePath>
				<Visible>false</Visible>
				<BuildAction>Content</BuildAction>
			</_PackageFiles>
		</ItemGroup>
	</Target>

</Project>
